name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'   # e.g. v1.0.0

jobs:
  build-artifacts:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # add macos-latest if needed
        python-version: [3.10]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pip install pyinstaller
          # Create a one-file executable. Adjust entry point path for Windows vs Linux if necessary
          pyinstaller --onefile --name lotto_game src/main.py

      - name: Upload release artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: lotto-${{ matrix.os }}
          path: dist/lotto_game*   # pyinstaller output

  create_release:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: lotto-ubuntu-latest  # will need to match uploaded names; simpler: upload same name in each job or archive them

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload files to release
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_docker:
    needs: build-artifacts
    runs-on: ubuntu-latest
    if: env.PUSH_DOCKER == 'true'
    env:
      PUSH_DOCKER: ${{ secrets.PUSH_DOCKER | default('false') }}
    steps:
      - uses: actions/checkout@v4
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lotto-game:${{ github.ref_name }}
